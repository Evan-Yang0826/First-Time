<template>
	<view class="container">
		<uni-section title="操作" type="line">
			<uni-row class="demo-uni-row">
				<view class="example-body box">
					<uni-col :span="12">
						<navigator url="stu_add" hover-class="navigator-hover">
							<button class="button" type="primary"><text class="button-text">新增</text></button>
						</navigator>
					</uni-col>
					<uni-col :span="12">
						<button class="button" type="primary" @click="refresh"><text class="button-text">刷新</text></button>
					</uni-col>
				</view>
			</uni-row>
		</uni-section>

		<uni-section v-for="(item, index) in userList"
					:key="index" title="学生信息" type="line">
			<uni-card :title="item.name" :extra="item.cardNo">
				<text class="uni-body">{{ item.gradeName }} {{ item.className }} {{ item.dormitoryName }}</text>
				<view class="example-body box">
					<uni-col :span="12">
						<navigator :url="'stu_update?id='+item.id" hover-class="navigator-hover">
							<button class="button" type="primary"><text class="button-text">修改</text></button>
						</navigator>
					</uni-col>
					<uni-col :span="12">
						<button class="button" type="warn" @click="del(item.id)"><text class="button-text">删除</text></button>
					</uni-col>
				</view>
			</uni-card>
		</uni-section>

	</view>
</template>

<script>
	export default {
		components: {},
		data() {
			return {
				userList:[]
			}
		},
		onShow() {
			this.getStus()
		},
		methods: {
			refresh(){
				this.getStus()
			},
			del(e){
				uni.request({
				    url: '/api/student/del/'+e, //仅为示例，并非真实接口地址。
				    method:'POST',
				    header: {
				    		'content-type': 'application/json'
				    	},
				    success: (res) => {
				        // console.log(res.data.msg);
						this.refresh()
				    }
				});
			},
			getStus() {
				uni.request({
				    url: '/api/students', //仅为示例，并非真实接口地址。
				    method:'GET',
				    header: {
				    		'content-type': 'application/json'
				    	},
				    success: (res) => {
				        // console.log(res.data.msg);
						this.userList = JSON.parse(res.data.msg);
						
				        console.log(this.userList[0]);
				    }
				});
			},
			actionsClick(text) {
				uni.showToast({
					title: text,
					icon: 'none'
				})
			}
		}
	}
</script>

<style lang="scss">
	@mixin flex {
		/* #ifndef APP-NVUE */
		display: flex;
		/* #endif */
		flex-direction: row;
	}

	@mixin height {
		/* #ifndef APP-NVUE */
		height: 100%;
		/* #endif */
		/* #ifdef APP-NVUE */
		flex: 1;
		/* #endif */
	}

	.dark {
		background-color: #d3dce6;
	}

	.light {
		background-color: #e5e9f2;
	}

	.demo-uni-col {
		height: 36px;
		border-radius: 5px;
	}

	.demo-uni-row {
		margin-bottom: 10px;

		// 组件在小程序端display为inline
		// QQ、字节小程序文档写有 :host，但实测不生效
		// 百度小程序没有 :host
		/* #ifdef MP-TOUTIAO || MP-QQ || MP-BAIDU */
		display: block;
		/* #endif */
	}

	.box {
		@include flex;
	}

	.button {
		@include flex;
		align-items: center;
		justify-content: center;
		flex: 1;
		height: 35px;
		margin: 0 5px;
		border-radius: 5px;
	}

	.example-body {
		background-color: #fff;
		padding: 10px 0;
	}

	.button-text {
		color: #fff;
		font-size: 12px;
	}

	.success-text {
		color: #09bb07;
	}

	.warn-text {
		color: #e6a23c;
	}

	.error-text {
		color: #f56c6c;
	}

	.info-text {
		color: #909399;
	}

	.container {
		overflow: hidden;
	}

	.custom-cover {
		flex: 1;
		flex-direction: row;
		position: relative;
	}

	.cover-content {
		position: absolute;
		bottom: 0;
		left: 0;
		right: 0;
		height: 40px;
		background-color: rgba($color: #000000, $alpha: 0.4);
		display: flex;
		flex-direction: row;
		align-items: center;
		padding-left: 15px;
		font-size: 14px;
		color: #fff;
	}

	.card-actions {
		display: flex;
		flex-direction: row;
		justify-content: space-around;
		align-items: center;
		height: 45px;
		border-top: 1px #eee solid;
	}

	.card-actions-item {
		display: flex;
		flex-direction: row;
		align-items: center;
	}

	.card-actions-item-text {
		font-size: 12px;
		color: #666;
		margin-left: 5px;
	}

	.cover-image {
		flex: 1;
		height: 150px;
	}

	.no-border {
		border-width: 0;
	}
</style>